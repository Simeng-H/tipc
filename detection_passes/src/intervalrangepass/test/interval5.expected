*** interval range analysis for function
define i64 @_tip_main() {
entry:
br label %header1
 
header1: ; preds = %body1, %entry
%x.0 = phi i64 [ 10, %entry ], [ %subtmp, %body1 ]
%y.0 = phi i64 [ 1, %entry ], [ %multmp, %body1 ]
%gttmp = icmp sgt i64 %x.0, 0
%loopcond = icmp ne i1 %gttmp, false
br i1 %loopcond, label %body1, label %exit1
 
body1: ; preds = %header1
%subtmp = sub i64 %x.0, 1
%multmp = mul i64 %y.0, 2
br label %header1
 
exit1: ; preds = %header1
call void @llvm.donothing()
%addtmp = add i64 %x.0, %y.0
ret i64 %addtmp
}
***
%gttmp = icmp sgt i64 %x.0, 0 = [0,1]
call void @llvm.donothing() = [-inf,+inf]
%x.0 = phi i64 [ 10, %entry ], [ %subtmp, %body1 ] = [-inf,10]
%multmp = mul i64 %y.0, 2 = [+inf,+inf]
%y.0 = phi i64 [ 1, %entry ], [ %multmp, %body1 ] = [1,+inf]
%loopcond = icmp ne i1 %gttmp, false = [0,1]
%addtmp = add i64 %x.0, %y.0 = [-inf,+inf]
%subtmp = sub i64 %x.0, 1 = [-inf,10]